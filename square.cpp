#include <stdio.h>
#include <math.h>

#define MIN_VALUE 0.0001

double safe_get_double(char var){
    int result;
    double a;
    for (;;){
        printf("%c = ", var);
        result = scanf("%lf", &a);
        while (getchar() != '\n');
        if (result) return a;
        printf("üò¢ –í—ã –≤–≤–µ–ª–∏ —á–∏—Å–ª–æ, –∫–æ—Ç–æ—Ä–æ–µ —è –Ω–µ —Å–º–æ–≥ —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–≤–µ—Å—Ç–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ —á–∏—Å–ª–æ (–Ω–∞–ø—Ä–∏–º–µ—Ä 12.34). –î–µ—Å—è—Ç–∏—á–Ω—ã–π —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å —Ç–æ—á–∫–∞ (.).\n");
    }
}

bool is_zero(double a){
    if (fabs(a) < MIN_VALUE) return true;
    else return false;
}

int main(){
    start:
    // ax^2 + bx + c = 0
    double a = 0, b = 0, c = 0;

    printf("üßÆ –ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–ª—è —Ä–µ—à–µ–Ω–∏—è –∫–≤–∞–¥—Ä–∞—Ç–Ω–æ–≥–æ —É—Ä–∞–≤–Ω–µ–Ω–∏—è ax^2 + bx + c = 0\n");
    printf("üìù –í–≤–µ–¥–∏—Ç–µ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã a, b –∏ c –∫–∞–∂–¥—ã–π –≤ –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–µ.\n");
    a = safe_get_double('a');
    b = safe_get_double('b');
    c = safe_get_double('c');

    printf("üìä %lgx^2 + %lgx + %lgc = 0\n", a, b, c);

    if (!is_zero(a)){
        double d = b * b - 4 * a * c;

        printf("üîç d = %lg\n", d);

        if (d > 0){
            double x1 = (-b + sqrt(d))/(2*a);
            double x2 = (-b - sqrt(d))/(2*a);
            printf("‚úÖ two solutions:\n"
                "x1 = %lg\n"
                "x2 = %lg\n", x1, x2);
        }
        else if (is_zero(d)){
            double x = (-b)/(2*a);
            printf("üéØ one solution:\n"
                "x = %lg", x);
        }
        else if (d < 0){
            printf("‚ùå no solutions");
        }
    }
    else if (!is_zero(b)){

        double x = -(c / b);
        printf("üéØ one solution:\n"
            "x = %lg", x);
    }
    else {
        printf("‚ùå no solutions");
    }

    int choice;
    printf("\nüîÑ –•–æ—Ç–∏—Ç–µ —Ä–µ—à–∏—Ç—å –µ—â–µ –æ–¥–Ω–æ —É—Ä–∞–≤–Ω–µ–Ω–∏–µ? (Y/n)");
    choice = getchar();
    if (choice == 'Y' || choice == 'y') goto start;

    return 0;
}
